---
import AddToCartButton from "../../components/reactive/AddToCartButton.vue";
import ProductCarrousel from "../../components/reactive/ProductCarrousel.vue";
import Layout from "../../layouts/Layout.astro";
import Sample from "../../assets/image-sample.webp";
import { Fetcher } from "../../utils/fetchUtils.js";

const { product } = Astro.params;

const fetchComponent = new Fetcher();

const data = await fetchComponent.fetchData(
    "wp-json/wc/v3/products?slug=" + product,
);

const item = data[0];

// Log d√©taill√© des donn√©es du produit
console.log('üì¶ Donn√©es du produit:', {
    id: item.id,
    nom: item.name,
    poids: item.weight,
    type: typeof item.weight,
    prix: item.price
});

// V√©rification du poids
if (!item.weight || item.weight === null) {
    console.warn(`‚ö†Ô∏è Le produit "${item.name}" n'a pas de poids d√©fini`);
    item.weight = 0; // Valeur par d√©faut
}
---

<script>
    const buttonAddToCart = document?.querySelector("#addToCart");
    const addToCart = () => {
        const itemId = buttonAddToCart?.getAttribute("data-item-id") ?? "";
        localStorage.setItem("cart", `[${itemId}]`);
    };

    buttonAddToCart?.addEventListener("click", () => addToCart());
</script>

<Layout>
    <div class="Product">
        <div class="Product__container">
            <h1 class="Product__container__title">{item.name}</h1>
            <p class="Product__container__price">{item.price} ‚Ç¨</p>
            { item.weight ? <p class="Product__container__weight">{item.weight} kg</p> : null}
            <div class="Product__container__boutons">
                <AddToCartButton
                    id={item.id}
                    name={item.name}
                    image={item.images[0] ? item.images[0].src : Sample.src}
                    price={item.price}
                    weight={item.weight}
                    client:idle
                />
            </div>
            <div class="Product__container__desc" set:html={item.description} />
        </div>
        <div class="Product__carrousel">
            {
                item.images ? (
                    <ProductCarrousel images={item.images} client:idle />
                ) : null
            }
        </div>
    </div>
</Layout>

<style lang="scss">
    .Product {
        max-width: 1280px;
        margin: 4rem auto;
        display: flex;
        flex-direction: row-reverse;
        width: max-content;
        gap: 6.75rem;
        &__container {
            max-width: 336px;
            display: flex;
            flex-direction: column;
            gap: 2rem;
            &__title {
                font-size: 2rem;
                font-family: "Lato", sans-serif;
                font-weight: 400;
            }
            &__price {
                font-size: 1.5rem;
                font-family: "Lato", sans-serif;
                font-weight: 300;
            }
            &__boutons {
                display: flex;
                flex-direction: column;
                width: 100%;
                gap: 1rem;
                &__bouton {
                    padding: 1rem 0;
                    cursor: pointer;
                    border: none;
                    font-size: 1rem;
                    color: #f3f1ed;
                    &:first-child {
                        background-color: #b39966;
                    }
                    &:last-child {
                        background-color: #342d1f;
                    }
                }
            }
            &__desc {
                font-family: "Lato", sans-serif;
                font-size: 1rem;
                font-weight: 300;
            }
        }
        &__carrousel {
            &__main {
                width: 548px;
                height: 496px;
                object-fit: contain;
            }
        }
        @media screen and (max-width: 992px) {
            flex-direction: column-reverse;
            justify-content: flex-start;
            align-items: center;
            gap: 2rem;
            max-width: 100%;
            &__container {
                max-width: 100%;
                padding: 1rem;
            }
        }
    }
</style>

<style lang="scss" is:global>
    .Product {
        &__container {
            &__desc {
                display: flex;
                flex-direction: column;
                gap: 1rem;
            }
        }
    }
</style>
